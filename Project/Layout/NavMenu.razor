@using Project.Components
@inject TransaccionService TransaccionService

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand ms-3" href="">GESTOR TRANSACCIONES</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto ms-5">
                <li class="nav-item">
                    <NavLink class="nav-link" href="">Inicio</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/AgregarTransaccion">Agregar Transacción</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="/resumen">Resumen</NavLink>
                </li>
            </ul>
        </div>
    </div>
</nav>


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private List<Transaccion>? transacciones;
    private List<Transaccion>? transaccionesFiltradas;

    protected override async Task OnInitializedAsync()
    {
        transacciones = await TransaccionService.ObtenerTodasAsync();
        transaccionesFiltradas = transacciones;
    }

    private void FiltrarTransacciones(List<Transaccion> resultado)
    {
        transaccionesFiltradas = resultado;
    }
}